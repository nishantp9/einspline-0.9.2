<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
  <title>einspline</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor=#FFFFD0>
<!--#include virtual="header.shtml" -->

<center><h1> Fortran 77 interface </h1></center>
The Fortran 77 wrappers provide a very similar interface to the
einspline library as in C, with a few exceptions:
<ul>
  <li> The fortran routine names are the C names, prefixed by an "f".</li>
  <li> The spline object pointers are passed as INTEGER*8 arguments,
  to ensure proper functioning on 64-bit platforms.  </li>
  <li> Since F77 has no concept of structures, uniform grid objects
  have been replaced by extra parameters to the
  create_UBspline_<i>x</i> routines.
  <li> For 2D and 3D splines, data is assumed to be stored in
  contiguous, row-order format (C-style).  If the data is statically
  allocated in F77, care must be take to ensure all element data is
  contiguous in memory.  
</ul>
<table CELLPADDING=2 frame=border rules=all width="60%">
<tr> <td> Boundary condition type </td> <td> Code </td> <td> Meaning </td> </tr>
<tr> <td> PERIODIC                </td> <td>  0   </td> <td> Use periodic boundary conditions.  The value, first 
                                                             derivative and second derivative at the left boundary match 
                                                             those at the right boundary.                                       </td> </tr>
<tr> <td> DERIV1                  </td> <td>  1   </td> <td> The value of the first derivative is specified in lVal or rVal.    </td> </tr>
<tr> <td> DERIV2                  </td> <td>  2   </td> <td> The value of the second derivative is specified in lVal or rVal.   </td> </tr>
<tr> <td> FLAT                    </td> <td>  3   </td> <td> The value of the first derivative is set to zero at the boundary.  </td> </tr>
<tr> <td> NATURAL                 </td> <td>  4   </td> <td> The value of the second derivative is set to zero at the boundary. </td> </tr>
</table>
Please see the documentation for the C routines for more information.
The subroutine names and parameters are given below:
<br/><br/>
<center> <h2><u> Nonuniform grid creation routines </u></h2> </center>
<p> The <b>general</b> grid is a catch-all grid type which can be constructed from any monotonic sequence of 
grid points.  To create it, we pass an array with the grid points, the number of points to the grid
<b>FCREATE_GENERAL_GRID</b>.  A handle to the grid object is returned in the parameter <b>grid</b>.</p>
<pre><font color="blue" size="5">SUBROUTINE FCREATE_GENERAL_GRID (points, num, grid) </font></pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description                                        </td> </tr>
<tr> <td> points   </td> <td>   IN   </td> <td> REAL*8    </td> <td> Monotonic set of points for grid with num elements </td> </tr>
<tr> <td> num      </td> <td>   IN   </td> <td> REAL*8    </td> <td> Number of elements in points array                 </td> </tr>
<tr> <td> grid     </td> <td>  OUT   </td> <td> INTEGER*8 </td> <td> Grid handle                                        </td> </tr>
</table>
<br/>
The <b>center</b> grid is a grid in which the points are clustered more closely around the center than at the
outsides.  It is useful for splines representing functions which have rapid oscillations near the origin
and are more smooth further out.  Atomic wave functions have this property.  A <b>create_center_grid</b>
function takes 5 arguments, as described below.  The <b>ratio</b> argument is the ratio of the largest spacing 
to the smallest spacing.  Thus with a <b>ratio</b> of 10, the points at the center would be spaced ten
times closer together than the points at the left and right extremes of the grid.
<pre><font color="blue" size="5">SUBROUTINE FCREATE_CENTER_GRID (start, end, ratio, num, grid) </font></pre>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description                                 </td> </tr>
<tr> <td> start    </td> <td>   IN   </td> <td> REAL*8    </td> <td> First grid point                            </td> </tr>
<tr> <td> end      </td> <td>   IN   </td> <td> REAL*8    </td> <td> Last grid point                             </td> </tr>
<tr> <td> ratio    </td> <td>   IN   </td> <td> REAL*8    </td> <td> Largest spacing divided by smallest spacing </td> </tr>
<tr> <td> num      </td> <td>   IN   </td> <td> REAL*8    </td> <td> Number of points in the grid                </td> </tr>
<tr> <td> grid     </td> <td>  OUT   </td> <td> INTEGER*8 </td> <td> Grid handle                                 </td> </tr>
</table>
<p>Once the grids are created, their handles are passed to the nonuniform spline create routines documented below.</p>
<br/>

<center> <h2><u> Nonuniform grid destruction routine </u></h2> </center>
The grid objects must be destroyed once they are no longer needed.  If they have been passed to
a spline creation routine, they should not be destroyed until <b>after</b> the spline has been
destroyed.  The following routine can be used to destroy either of the nonuniform grids.
<pre>
<font color="blue" size="5">SUBROUTINE FDESTROY_GRID (grid)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> grid     </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of grid object    </td> </tr>
</table>
</br>

<center> <h2><u> Nonuniform spline creation routines </u></h2> </center>
<h3> <u>One-dimensional:</u></h3>
<h4> Single-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_1D_S (x_grid, x0_code, x0_val, x1_code, x1_val, data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left BC type             </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left BC value            </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right BC type            </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right BC value           </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*4    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_1D_D (x_grid, x0_code, x0_val, x1_code, x1_val, data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left BC type             </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left BC value            </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right BC type            </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right BC value           </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*8    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Single-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_1D_C (x_grid, x0_code, x0_val, x1_code, x1_val, data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left BC type             </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left BC value            </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right BC type            </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right BC value           </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_1D_Z (x_grid, x0_code, x0_val, x1_code, x1_val, data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left BC type             </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left BC value            </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right BC type            </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right BC value           </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>

<h3> <u>Two-dimensional:</u></h3>
<h4> Single-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_2D_S (x_grid, y_grid, 
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right y BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*4    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_2D_D (x_grid, y_grid, 
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right y BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*8    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Single-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_2D_C (x_grid, y_grid, 
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right y BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_2D_Z (x_grid, y_grid, 
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right y BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>

<h3> <u>Three-dimensional:</u></h3>
<h4> Single-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_3D_S (x_grid, y_grid, z_grid,
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
				  z0_code, z0_val, z1_code, z1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> z_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of z grid object  </td> </tr>
<tr> <td> num_z    </td> <td> IN     </td> <td> INTEGER   </td> <td> # of z grid points       </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right y BC value         </td> </tr>
<tr> <td> z0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left z BC type           </td> </tr>
<tr> <td> z0_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Left z BC value          </td> </tr>
<tr> <td> z1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right z BC type          </td> </tr>
<tr> <td> z1_val   </td> <td> IN     </td> <td> REAL*4    </td> <td> Right z BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*4    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision real</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_3D_D (x_grid, y_grid, z_grid,
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
				  z0_code, z0_val, z1_code, z1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> z_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of z grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right y BC value         </td> </tr>
<tr> <td> z0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left z BC type           </td> </tr>
<tr> <td> z0_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Left z BC value          </td> </tr>
<tr> <td> z1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right z BC type          </td> </tr>
<tr> <td> z1_val   </td> <td> IN     </td> <td> REAL*8    </td> <td> Right z BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> REAL*8    </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Single-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_3D_C (x_grid, y_grid, z_grid,
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
				  z0_code, z0_val, z1_code, z1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> z_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of z grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right y BC value         </td> </tr>
<tr> <td> z0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left z BC type           </td> </tr>
<tr> <td> z0_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Left z BC value          </td> </tr>
<tr> <td> z1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right z BC type          </td> </tr>
<tr> <td> z1_val   </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Right z BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*8 </td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>
<h4> Double-precision complex</h4>
<pre>
<font color="blue" size="5">SUBROUTINE FCREATE_NUBSPLINE_3D_Z (x_grid, y_grid, z_grid,
                                  x0_code, x0_val, x1_code, x1_val, 
				  y0_code, y0_val, y1_code, y1_val, 
				  z0_code, z0_val, z1_code, z1_val, 
                                  data, spline)</font>
</pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> x_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of x grid object  </td> </tr>
<tr> <td> y_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of y grid object  </td> </tr>
<tr> <td> z_grid   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Handle of z grid object  </td> </tr>
<tr> <td> x0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left x BC type           </td> </tr>
<tr> <td> x0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left x BC value          </td> </tr>
<tr> <td> x1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right x BC type          </td> </tr>
<tr> <td> x1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right x BC value         </td> </tr>
<tr> <td> y0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left y BC type           </td> </tr>
<tr> <td> y0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left y BC value          </td> </tr>
<tr> <td> y1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right y BC type          </td> </tr>
<tr> <td> y1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right y BC value         </td> </tr>
<tr> <td> z0_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Left z BC type           </td> </tr>
<tr> <td> z0_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Left z BC value          </td> </tr>
<tr> <td> z1_code  </td> <td> IN     </td> <td> INTEGER   </td> <td> Right z BC type          </td> </tr>
<tr> <td> z1_val   </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Right z BC value         </td> </tr>
<tr> <td> data     </td> <td> IN     </td> <td> COMPLEX*16</td> <td> Data to interpolate      </td> </tr>
<tr> <td> spline   </td> <td> OUT    </td> <td> INTEGER*8 </td> <td> Handle for spline object </td> </tr>
</table>
<br/>

<center> <h2><u> Spline destruction routine </u></h2> </center>
<p>The following subroutine can be used to deallocate the memory for any Bspline object.  
Note that in the nonuniform case, the grid objects must be destroyed after the splines that
refer to them.
<pre>
<font color="blue" size="5">SUBROUTINE FDESTROY_BSPLINE (spline)</font> </pre>
<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> Type      </td> <td> Description              </td> </tr>
<tr> <td> spline   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> Spline object handle     </td> </tr>
</table>
<br/>

<center> <h2><u> Uniform spline evaulation routines </u></h2> </center>
<h3><u> One-dimensional </u></h3>
<pre>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_S     (spline, x, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_D     (spline, x, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_C     (spline, x, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_Z     (spline, x, val)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_S_VG  (spline, x, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_D_VG  (spline, x, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_C_VG  (spline, x, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_Z_VG  (spline, x, val, grad)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_S_VGL (spline, x, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_D_VGL (spline, x, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_C_VGL (spline, x, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_Z_VGL (spline, x, val, grad, lapl)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_S_VGH (spline, x, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_D_VGH (spline, x, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_C_VGH (spline, x, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_1D_Z_VGH (spline, x, val, grad, hess)</font>
</pre>

<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> _S Type   </td> <td> _D Type   </td> <td> _C Type   </td> <td> _Z Type    </td> <td> Description                   </td> </tr>
<tr> <td> spline   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8  </td> <td> Spline handle                 </td> </tr>
<tr> <td> x        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> Interpolation position        </td> </tr>
<tr> <td> val      </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated value            </td> </tr>
<tr> <td> grad     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated first derivative </td> </tr>
<tr> <td> lapl     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated second derivative </td> </tr>
<tr> <td> hess     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated second derivative </td> </tr>
</table>
<br/>

<h3><u> Two-dimensional </u></h3>
<pre>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_S     (spline, x, y, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_D     (spline, x, y, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_C     (spline, x, y, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_Z     (spline, x, y, val)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_S_VG  (spline, x, y, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_D_VG  (spline, x, y, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_C_VG  (spline, x, y, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_Z_VG  (spline, x, y, val, grad)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_S_VGL (spline, x, y, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_D_VGL (spline, x, y, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_C_VGL (spline, x, y, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_Z_VGL (spline, x, y, val, grad, lapl)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_S_VGH (spline, x, y, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_D_VGH (spline, x, y, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_C_VGH (spline, x, y, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_2D_Z_VGH (spline, x, y, val, grad, hess)</font>
</pre>

<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> _S Type   </td> <td> _D Type   </td> <td> _C Type   </td> <td> _Z Type    </td> <td> Description                        </td> </tr>
<tr> <td> spline   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8  </td> <td> Spline handle                      </td> </tr>
<tr> <td> x        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> x coordinate for interpolation     </td> </tr>
<tr> <td> y        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> y coordinate for interpolation     </td> </tr>
<tr> <td> val      </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated value                 </td> </tr>
<tr> <td> grad     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated gradient (2 elements) </td> </tr>
<tr> <td> lapl     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated Laplacian             </td> </tr>
<tr> <td> hess     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated Hessian (4 elements)  </td> </tr>
</table>
<br/>

<h3><u> Three-dimensional </u></h3>
<pre>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_S     (spline, x, y, z, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_D     (spline, x, y, z, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_C     (spline, x, y, z, val)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_Z     (spline, x, y, z, val)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_S_VG  (spline, x, y, z, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_D_VG  (spline, x, y, z, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_C_VG  (spline, x, y, z, val, grad)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_Z_VG  (spline, x, y, z, val, grad)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_S_VGL (spline, x, y, z, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_D_VGL (spline, x, y, z, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_C_VGL (spline, x, y, z, val, grad, lapl)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_Z_VGL (spline, x, y, z, val, grad, lapl)</font>

<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_S_VGH (spline, x, y, z, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_D_VGH (spline, x, y, z, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_C_VGH (spline, x, y, z, val, grad, hess)</font>
<font color="blue" size="5">SUBROUTINE FEVAL_NUBSPLINE_3D_Z_VGH (spline, x, y, z, val, grad, hess)</font>
</pre>

<table CELLPADDING=2 frame=border rules=all>
<tr> <td> Argument </td> <td> Intent </td> <td> _S Type   </td> <td> _D Type   </td> <td> _C Type   </td> <td> _Z Type    </td> <td> Description                        </td> </tr>
<tr> <td> spline   </td> <td> IN     </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8 </td> <td> INTEGER*8  </td> <td> Spline handle                      </td> </tr>
<tr> <td> x        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> x coordinate for interpolation     </td> </tr>
<tr> <td> y        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> y coordinate for interpolation     </td> </tr>
<tr> <td> z        </td> <td> IN     </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8    </td> <td> REAL*8     </td> <td> z coordinate for interpolation     </td> </tr>
<tr> <td> val      </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated value                 </td> </tr>
<tr> <td> grad     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated gradient (3 elements) </td> </tr>
<tr> <td> lapl     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated Laplacian             </td> </tr>
<tr> <td> hess     </td> <td> OUT    </td> <td> REAL*4    </td> <td> REAL*8    </td> <td> COMPLEX*8 </td> <td> COMPLEX*16 </td> <td> Interpolated Hessian (9 elements)  </td> </tr>
</table>

<!--#include virtual="footer.shtml" -->
</body>
</html>
